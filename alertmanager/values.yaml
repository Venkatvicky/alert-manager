replicaCount: 1

revisionHistoryLimit: 10

image:
  repository: quay.io/prometheus/alertmanager
  pullPolicy: IfNotPresent
  tag: ""

baseURL: ""

extraArgs: {}

extraSecretMounts: []

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
namespaceOverride: ""

automountServiceAccountToken: true

serviceAccount:
  create: true
  annotations: {}
  name: ""

priorityClassName: ""
schedulerName: ""

podSecurityContext:
  fsGroup: 65534

dnsConfig: {}

hostAliases: []

securityContext:
  runAsUser: 65534
  runAsNonRoot: true
  runAsGroup: 65534

additionalPeers: []
extraInitContainers: []
extraContainers: []

containerPortName: &containerPortName http

livenessProbe:
  httpGet:
    path: /
    port: *containerPortName

readinessProbe:
  httpGet:
    path: /
    port: *containerPortName

service:
  annotations: {}
  labels: {}
  type: ClusterIP
  port: 9093
  clusterPort: 9094
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  extraPorts: []
  ipDualStack:
    enabled: false
    ipFamilies: ["IPv6", "IPv4"]
    ipFamilyPolicy: "PreferDualStack"

servicePerReplica:
  enabled: false
  annotations: {}
  loadBalancerSourceRanges: []
  externalTrafficPolicy: Cluster
  type: ClusterIP

ingress:
  enabled: false
  className: ""
  labels: {}
  annotations: {}
  hosts:
    - host: alertmanager.domain.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

ingressPerReplica:
  enabled: false
  className: ""
  annotations: {}
  labels: {}
  hostPrefix: "alertmanager"
  hostDomain: "domain.com"
  paths:
    - /
  pathType: ImplementationSpecific
  tlsSecretName: ""
  tlsSecretPerReplica:
    enabled: false
    prefix: "alertmanager"

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}

podAntiAffinity: ""

podAntiAffinityTopologyKey: kubernetes.io/hostname

topologySpreadConstraints: []

statefulSet:
  annotations: {}

minReadySeconds: 0

podAnnotations: {}
podLabels: {}

podDisruptionBudget: {}

command: []

persistence:
  enabled: true
  storageClass: "gp3-csi"  # <-- Set your StorageClass here (use `standard` for GKE or `hostpath` for local)
  accessModes:
    - ReadWriteOnce
  size: 50Mi

configAnnotations: {}

config:
  enabled: true
  global: {}
  templates:
    - '/etc/alertmanager/*.tmpl'
  receivers:
    - name: default-receiver
  route:
    group_wait: 10s
    group_interval: 5m
    receiver: default-receiver
    repeat_interval: 3h

configmapReload:
  enabled: false
  name: configmap-reload
